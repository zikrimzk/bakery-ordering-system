<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="bakerysystemDataSet" targetNamespace="http://tempuri.org/bakerysystemDataSet.xsd" xmlns:mstns="http://tempuri.org/bakerysystemDataSet.xsd" xmlns="http://tempuri.org/bakerysystemDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="bakerysystemConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="bakerysystemConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.bakerySystem.Properties.Settings.GlobalReference.Default.bakerysystemConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CakeTableAdapter" GeneratorDataComponentClassName="CakeTableAdapter" Name="Cake" UserDataComponentName="CakeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bakerysystemConnectionString (Settings)" DbObjectName="bakerysystem.dbo.Cake" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Cake] WHERE (([ID] = @Original_ID) AND ([typeID] = @Original_typeID) AND ([pricePerSlice] = @Original_pricePerSlice))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_typeID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="typeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_pricePerSlice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="pricePerSlice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Cake] ([ID], [cakeName], [typeID], [pricePerSlice], [cakeImage]) VALUES (@ID, @cakeName, @typeID, @pricePerSlice, @cakeImage);
SELECT ID, cakeName, typeID, pricePerSlice, cakeImage FROM Cake WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cakeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cakeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@typeID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="typeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@pricePerSlice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="pricePerSlice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@cakeImage" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="cakeImage" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, cakeName, typeID, pricePerSlice, cakeImage FROM dbo.Cake</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Cake] SET [ID] = @ID, [cakeName] = @cakeName, [typeID] = @typeID, [pricePerSlice] = @pricePerSlice, [cakeImage] = @cakeImage WHERE (([ID] = @Original_ID) AND ([typeID] = @Original_typeID) AND ([pricePerSlice] = @Original_pricePerSlice));
SELECT ID, cakeName, typeID, pricePerSlice, cakeImage FROM Cake WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cakeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cakeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@typeID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="typeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@pricePerSlice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="pricePerSlice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@cakeImage" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="cakeImage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_typeID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="typeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_pricePerSlice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="pricePerSlice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="cakeName" DataSetColumn="cakeName" />
              <Mapping SourceColumn="typeID" DataSetColumn="typeID" />
              <Mapping SourceColumn="pricePerSlice" DataSetColumn="pricePerSlice" />
              <Mapping SourceColumn="cakeImage" DataSetColumn="cakeImage" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CakeTypesTableAdapter" GeneratorDataComponentClassName="CakeTypesTableAdapter" Name="CakeTypes" UserDataComponentName="CakeTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bakerysystemConnectionString (Settings)" DbObjectName="bakerysystem.dbo.CakeTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CakeTypes] WHERE (([ID] = @Original_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CakeTypes] ([ID], [TypeName]) VALUES (@ID, @TypeName);
SELECT ID, TypeName FROM CakeTypes WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, TypeName FROM dbo.CakeTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CakeTypes] SET [ID] = @ID, [TypeName] = @TypeName WHERE (([ID] = @Original_ID));
SELECT ID, TypeName FROM CakeTypes WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="TypeName" DataSetColumn="TypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CustomerScreenTableAdapter" GeneratorDataComponentClassName="CustomerScreenTableAdapter" Name="CustomerScreen" UserDataComponentName="CustomerScreenTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bakerysystemConnectionString (Settings)" DbObjectName="bakerysystem.dbo.CustomerScreen" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CustomerScreen] WHERE (([ID] = @Original_ID) AND ([orderID] = @Original_orderID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_orderID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CustomerScreen] ([ID], [orderID]) VALUES (@ID, @orderID);
SELECT ID, orderID FROM CustomerScreen WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@orderID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, orderID FROM dbo.CustomerScreen</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CustomerScreen] SET [ID] = @ID, [orderID] = @orderID WHERE (([ID] = @Original_ID) AND ([orderID] = @Original_orderID));
SELECT ID, orderID FROM CustomerScreen WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@orderID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_orderID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="orderID" DataSetColumn="orderID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LogTableAdapter" GeneratorDataComponentClassName="LogTableAdapter" Name="Log" UserDataComponentName="LogTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bakerysystemConnectionString (Settings)" DbObjectName="bakerysystem.dbo.[Log]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Log] WHERE (([logID] = @Original_logID) AND ([logInTime] = @Original_logInTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_logID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="logID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_logInTime" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="logInTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Log] ([logID], [staffID]) VALUES (@logID, @staffID);
SELECT logID, logInTime, staffID FROM [Log] WHERE (logID = @logID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@logID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="logID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT logID, logInTime, staffID FROM dbo.[Log]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Log] SET [logID] = @logID, [staffID] = @staffID WHERE (([logID] = @Original_logID) AND ([logInTime] = @Original_logInTime));
SELECT logID, logInTime, staffID FROM [Log] WHERE (logID = @logID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@logID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="logID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_logID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="logID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_logInTime" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="logInTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="logID" DataSetColumn="logID" />
              <Mapping SourceColumn="logInTime" DataSetColumn="logInTime" />
              <Mapping SourceColumn="staffID" DataSetColumn="staffID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OrderDetailsTableAdapter" GeneratorDataComponentClassName="OrderDetailsTableAdapter" Name="OrderDetails" UserDataComponentName="OrderDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bakerysystemConnectionString (Settings)" DbObjectName="bakerysystem.dbo.OrderDetails" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[OrderDetails] WHERE (([ID] = @Original_ID) AND ([TimeOfOrder] = @Original_TimeOfOrder))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_TimeOfOrder" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="TimeOfOrder" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[OrderDetails] ([ID], [cakeID], [customerID], [orderQuantity], [addOnWish], [orderTotal], [statusID]) VALUES (@ID, @cakeID, @customerID, @orderQuantity, @addOnWish, @orderTotal, @statusID);
SELECT ID, cakeID, customerID, orderQuantity, addOnWish, orderTotal, TimeOfOrder, statusID FROM OrderDetails WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cakeID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cakeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@customerID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="customerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@orderQuantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderQuantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@addOnWish" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="addOnWish" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@orderTotal" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="orderTotal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@statusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="statusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, cakeID, customerID, orderQuantity, addOnWish, orderTotal, TimeOfOrder, statusID FROM dbo.OrderDetails</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[OrderDetails] SET [ID] = @ID, [cakeID] = @cakeID, [customerID] = @customerID, [orderQuantity] = @orderQuantity, [addOnWish] = @addOnWish, [orderTotal] = @orderTotal, [statusID] = @statusID WHERE (([ID] = @Original_ID) AND ([TimeOfOrder] = @Original_TimeOfOrder));
SELECT ID, cakeID, customerID, orderQuantity, addOnWish, orderTotal, TimeOfOrder, statusID FROM OrderDetails WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cakeID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cakeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@customerID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="customerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@orderQuantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderQuantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@addOnWish" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="addOnWish" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@orderTotal" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="orderTotal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@statusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="statusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_TimeOfOrder" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="TimeOfOrder" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="cakeID" DataSetColumn="cakeID" />
              <Mapping SourceColumn="customerID" DataSetColumn="customerID" />
              <Mapping SourceColumn="orderQuantity" DataSetColumn="orderQuantity" />
              <Mapping SourceColumn="addOnWish" DataSetColumn="addOnWish" />
              <Mapping SourceColumn="orderTotal" DataSetColumn="orderTotal" />
              <Mapping SourceColumn="TimeOfOrder" DataSetColumn="TimeOfOrder" />
              <Mapping SourceColumn="statusID" DataSetColumn="statusID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StaffTableAdapter" GeneratorDataComponentClassName="StaffTableAdapter" Name="Staff" UserDataComponentName="StaffTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bakerysystemConnectionString (Settings)" DbObjectName="bakerysystem.dbo.Staff" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Staff] WHERE (([ID] = @Original_ID) AND ([staffIcNo] = @Original_staffIcNo) AND ([staffPhoneNo] = @Original_staffPhoneNo) AND ([staffPassword] = @Original_staffPassword))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_staffIcNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffIcNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_staffPhoneNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffPhoneNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_staffPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Staff] ([ID], [staffIcNo], [staffName], [staffPhoneNo], [staffPassword]) VALUES (@ID, @staffIcNo, @staffName, @staffPhoneNo, @staffPassword);
SELECT ID, staffIcNo, staffName, staffPhoneNo, staffPassword FROM Staff WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffIcNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffIcNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffPhoneNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffPhoneNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, staffIcNo, staffName, staffPhoneNo, staffPassword FROM dbo.Staff</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Staff] SET [ID] = @ID, [staffIcNo] = @staffIcNo, [staffName] = @staffName, [staffPhoneNo] = @staffPhoneNo, [staffPassword] = @staffPassword WHERE (([ID] = @Original_ID) AND ([staffIcNo] = @Original_staffIcNo) AND ([staffPhoneNo] = @Original_staffPhoneNo) AND ([staffPassword] = @Original_staffPassword));
SELECT ID, staffIcNo, staffName, staffPhoneNo, staffPassword FROM Staff WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffIcNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffIcNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffPhoneNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffPhoneNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staffPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_staffIcNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffIcNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_staffPhoneNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffPhoneNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_staffPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staffPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="staffIcNo" DataSetColumn="staffIcNo" />
              <Mapping SourceColumn="staffName" DataSetColumn="staffName" />
              <Mapping SourceColumn="staffPhoneNo" DataSetColumn="staffPhoneNo" />
              <Mapping SourceColumn="staffPassword" DataSetColumn="staffPassword" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StatusTypesTableAdapter" GeneratorDataComponentClassName="StatusTypesTableAdapter" Name="StatusTypes" UserDataComponentName="StatusTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bakerysystemConnectionString (Settings)" DbObjectName="bakerysystem.dbo.StatusTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StatusTypes] WHERE (([ID] = @Original_ID) AND ([statusName] = @Original_statusName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_statusName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="statusName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StatusTypes] ([ID], [statusName]) VALUES (@ID, @statusName);
SELECT ID, statusName FROM StatusTypes WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@statusName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="statusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, statusName FROM dbo.StatusTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StatusTypes] SET [ID] = @ID, [statusName] = @statusName WHERE (([ID] = @Original_ID) AND ([statusName] = @Original_statusName));
SELECT ID, statusName FROM StatusTypes WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@statusName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="statusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_statusName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="statusName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="statusName" DataSetColumn="statusName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="bakerysystemDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="bakerysystemDataSet" msprop:Generator_DataSetName="bakerysystemDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Cake" msprop:Generator_RowEvHandlerName="CakeRowChangeEventHandler" msprop:Generator_RowDeletedName="CakeRowDeleted" msprop:Generator_RowDeletingName="CakeRowDeleting" msprop:Generator_RowEvArgName="CakeRowChangeEvent" msprop:Generator_TablePropName="Cake" msprop:Generator_RowChangedName="CakeRowChanged" msprop:Generator_RowChangingName="CakeRowChanging" msprop:Generator_TableClassName="CakeDataTable" msprop:Generator_RowClassName="CakeRow" msprop:Generator_TableVarName="tableCake" msprop:Generator_UserTableName="Cake">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cakeName" msprop:Generator_ColumnPropNameInRow="cakeName" msprop:Generator_ColumnPropNameInTable="cakeNameColumn" msprop:Generator_ColumnVarNameInTable="columncakeName" msprop:Generator_UserColumnName="cakeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="typeID" msprop:Generator_ColumnPropNameInRow="typeID" msprop:Generator_ColumnPropNameInTable="typeIDColumn" msprop:Generator_ColumnVarNameInTable="columntypeID" msprop:Generator_UserColumnName="typeID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pricePerSlice" msprop:Generator_ColumnPropNameInRow="pricePerSlice" msprop:Generator_ColumnPropNameInTable="pricePerSliceColumn" msprop:Generator_ColumnVarNameInTable="columnpricePerSlice" msprop:Generator_UserColumnName="pricePerSlice" type="xs:double" />
              <xs:element name="cakeImage" msprop:Generator_ColumnPropNameInRow="cakeImage" msprop:Generator_ColumnPropNameInTable="cakeImageColumn" msprop:Generator_ColumnVarNameInTable="columncakeImage" msprop:Generator_UserColumnName="cakeImage" type="xs:base64Binary" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CakeTypes" msprop:Generator_RowEvHandlerName="CakeTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="CakeTypesRowDeleted" msprop:Generator_RowDeletingName="CakeTypesRowDeleting" msprop:Generator_RowEvArgName="CakeTypesRowChangeEvent" msprop:Generator_TablePropName="CakeTypes" msprop:Generator_RowChangedName="CakeTypesRowChanged" msprop:Generator_RowChangingName="CakeTypesRowChanging" msprop:Generator_TableClassName="CakeTypesDataTable" msprop:Generator_RowClassName="CakeTypesRow" msprop:Generator_TableVarName="tableCakeTypes" msprop:Generator_UserTableName="CakeTypes">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TypeName" msprop:Generator_ColumnPropNameInRow="TypeName" msprop:Generator_ColumnPropNameInTable="TypeNameColumn" msprop:Generator_ColumnVarNameInTable="columnTypeName" msprop:Generator_UserColumnName="TypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CustomerScreen" msprop:Generator_RowEvHandlerName="CustomerScreenRowChangeEventHandler" msprop:Generator_RowDeletedName="CustomerScreenRowDeleted" msprop:Generator_RowDeletingName="CustomerScreenRowDeleting" msprop:Generator_RowEvArgName="CustomerScreenRowChangeEvent" msprop:Generator_TablePropName="CustomerScreen" msprop:Generator_RowChangedName="CustomerScreenRowChanged" msprop:Generator_RowChangingName="CustomerScreenRowChanging" msprop:Generator_TableClassName="CustomerScreenDataTable" msprop:Generator_RowClassName="CustomerScreenRow" msprop:Generator_TableVarName="tableCustomerScreen" msprop:Generator_UserTableName="CustomerScreen">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="orderID" msprop:Generator_ColumnPropNameInRow="orderID" msprop:Generator_ColumnPropNameInTable="orderIDColumn" msprop:Generator_ColumnVarNameInTable="columnorderID" msprop:Generator_UserColumnName="orderID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Log" msprop:Generator_RowEvHandlerName="LogRowChangeEventHandler" msprop:Generator_RowDeletedName="LogRowDeleted" msprop:Generator_RowDeletingName="LogRowDeleting" msprop:Generator_RowEvArgName="LogRowChangeEvent" msprop:Generator_TablePropName="Log" msprop:Generator_RowChangedName="LogRowChanged" msprop:Generator_RowChangingName="LogRowChanging" msprop:Generator_TableClassName="LogDataTable" msprop:Generator_RowClassName="LogRow" msprop:Generator_TableVarName="tableLog" msprop:Generator_UserTableName="Log">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="logID" msprop:Generator_ColumnPropNameInRow="logID" msprop:Generator_ColumnPropNameInTable="logIDColumn" msprop:Generator_ColumnVarNameInTable="columnlogID" msprop:Generator_UserColumnName="logID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="logInTime" msdata:ReadOnly="true" msprop:Generator_ColumnPropNameInRow="logInTime" msprop:Generator_ColumnPropNameInTable="logInTimeColumn" msprop:Generator_ColumnVarNameInTable="columnlogInTime" msprop:Generator_UserColumnName="logInTime" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="staffID" msprop:Generator_ColumnPropNameInRow="staffID" msprop:Generator_ColumnPropNameInTable="staffIDColumn" msprop:Generator_ColumnVarNameInTable="columnstaffID" msprop:Generator_UserColumnName="staffID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OrderDetails" msprop:Generator_RowEvHandlerName="OrderDetailsRowChangeEventHandler" msprop:Generator_RowDeletedName="OrderDetailsRowDeleted" msprop:Generator_RowDeletingName="OrderDetailsRowDeleting" msprop:Generator_RowEvArgName="OrderDetailsRowChangeEvent" msprop:Generator_TablePropName="OrderDetails" msprop:Generator_RowChangedName="OrderDetailsRowChanged" msprop:Generator_RowChangingName="OrderDetailsRowChanging" msprop:Generator_TableClassName="OrderDetailsDataTable" msprop:Generator_RowClassName="OrderDetailsRow" msprop:Generator_TableVarName="tableOrderDetails" msprop:Generator_UserTableName="OrderDetails">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cakeID" msprop:Generator_ColumnPropNameInRow="cakeID" msprop:Generator_ColumnPropNameInTable="cakeIDColumn" msprop:Generator_ColumnVarNameInTable="columncakeID" msprop:Generator_UserColumnName="cakeID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="customerID" msprop:Generator_ColumnPropNameInRow="customerID" msprop:Generator_ColumnPropNameInTable="customerIDColumn" msprop:Generator_ColumnVarNameInTable="columncustomerID" msprop:Generator_UserColumnName="customerID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="orderQuantity" msprop:Generator_ColumnPropNameInRow="orderQuantity" msprop:Generator_ColumnPropNameInTable="orderQuantityColumn" msprop:Generator_ColumnVarNameInTable="columnorderQuantity" msprop:Generator_UserColumnName="orderQuantity" type="xs:int" />
              <xs:element name="addOnWish" msprop:Generator_ColumnPropNameInRow="addOnWish" msprop:Generator_ColumnPropNameInTable="addOnWishColumn" msprop:Generator_ColumnVarNameInTable="columnaddOnWish" msprop:Generator_UserColumnName="addOnWish" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="orderTotal" msprop:Generator_ColumnPropNameInRow="orderTotal" msprop:Generator_ColumnPropNameInTable="orderTotalColumn" msprop:Generator_ColumnVarNameInTable="columnorderTotal" msprop:Generator_UserColumnName="orderTotal" type="xs:decimal" />
              <xs:element name="TimeOfOrder" msdata:ReadOnly="true" msprop:Generator_ColumnPropNameInRow="TimeOfOrder" msprop:Generator_ColumnPropNameInTable="TimeOfOrderColumn" msprop:Generator_ColumnVarNameInTable="columnTimeOfOrder" msprop:Generator_UserColumnName="TimeOfOrder" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="statusID" msprop:Generator_ColumnPropNameInRow="statusID" msprop:Generator_ColumnPropNameInTable="statusIDColumn" msprop:Generator_ColumnVarNameInTable="columnstatusID" msprop:Generator_UserColumnName="statusID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Staff" msprop:Generator_RowEvHandlerName="StaffRowChangeEventHandler" msprop:Generator_RowDeletedName="StaffRowDeleted" msprop:Generator_RowDeletingName="StaffRowDeleting" msprop:Generator_RowEvArgName="StaffRowChangeEvent" msprop:Generator_TablePropName="Staff" msprop:Generator_RowChangedName="StaffRowChanged" msprop:Generator_RowChangingName="StaffRowChanging" msprop:Generator_TableClassName="StaffDataTable" msprop:Generator_RowClassName="StaffRow" msprop:Generator_TableVarName="tableStaff" msprop:Generator_UserTableName="Staff">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="staffIcNo" msprop:Generator_ColumnPropNameInRow="staffIcNo" msprop:Generator_ColumnPropNameInTable="staffIcNoColumn" msprop:Generator_ColumnVarNameInTable="columnstaffIcNo" msprop:Generator_UserColumnName="staffIcNo">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="staffName" msprop:Generator_ColumnPropNameInRow="staffName" msprop:Generator_ColumnPropNameInTable="staffNameColumn" msprop:Generator_ColumnVarNameInTable="columnstaffName" msprop:Generator_UserColumnName="staffName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="staffPhoneNo" msprop:Generator_ColumnPropNameInRow="staffPhoneNo" msprop:Generator_ColumnPropNameInTable="staffPhoneNoColumn" msprop:Generator_ColumnVarNameInTable="columnstaffPhoneNo" msprop:Generator_UserColumnName="staffPhoneNo">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="staffPassword" msprop:Generator_ColumnPropNameInRow="staffPassword" msprop:Generator_ColumnPropNameInTable="staffPasswordColumn" msprop:Generator_ColumnVarNameInTable="columnstaffPassword" msprop:Generator_UserColumnName="staffPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StatusTypes" msprop:Generator_RowEvHandlerName="StatusTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="StatusTypesRowDeleted" msprop:Generator_RowDeletingName="StatusTypesRowDeleting" msprop:Generator_RowEvArgName="StatusTypesRowChangeEvent" msprop:Generator_TablePropName="StatusTypes" msprop:Generator_RowChangedName="StatusTypesRowChanged" msprop:Generator_RowChangingName="StatusTypesRowChanging" msprop:Generator_TableClassName="StatusTypesDataTable" msprop:Generator_RowClassName="StatusTypesRow" msprop:Generator_TableVarName="tableStatusTypes" msprop:Generator_UserTableName="StatusTypes">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="statusName" msprop:Generator_ColumnPropNameInRow="statusName" msprop:Generator_ColumnPropNameInTable="statusNameColumn" msprop:Generator_ColumnVarNameInTable="columnstatusName" msprop:Generator_UserColumnName="statusName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Cake" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="CakeTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CakeTypes" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="CustomerScreen_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CustomerScreen" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Log_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Log" />
      <xs:field xpath="mstns:logID" />
    </xs:unique>
    <xs:unique name="OrderDetails_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:OrderDetails" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Staff_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Staff" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="StatusTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StatusTypes" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Cake_Cake" msdata:parent="CakeTypes" msdata:child="Cake" msdata:parentkey="ID" msdata:childkey="typeID" msprop:Generator_UserParentTable="CakeTypes" msprop:Generator_UserChildTable="Cake" msprop:Generator_RelationVarName="relationFK_Cake_Cake" msprop:Generator_UserRelationName="FK_Cake_Cake" msprop:Generator_ChildPropName="GetCakeRows" msprop:Generator_ParentPropName="CakeTypesRow" />
      <msdata:Relationship name="FK_Log_Staff" msdata:parent="Staff" msdata:child="Log" msdata:parentkey="ID" msdata:childkey="staffID" msprop:Generator_UserParentTable="Staff" msprop:Generator_UserChildTable="Log" msprop:Generator_RelationVarName="relationFK_Log_Staff" msprop:Generator_UserRelationName="FK_Log_Staff" msprop:Generator_ChildPropName="GetLogRows" msprop:Generator_ParentPropName="StaffRow" />
      <msdata:Relationship name="FK_OrderDetails_Cake" msdata:parent="Cake" msdata:child="OrderDetails" msdata:parentkey="ID" msdata:childkey="cakeID" msprop:Generator_UserParentTable="Cake" msprop:Generator_UserChildTable="OrderDetails" msprop:Generator_RelationVarName="relationFK_OrderDetails_Cake" msprop:Generator_ChildPropName="GetOrderDetailsRows" msprop:Generator_ParentPropName="CakeRow" msprop:Generator_UserRelationName="FK_OrderDetails_Cake" />
      <msdata:Relationship name="FK_OrderDetails_CustomerScreen" msdata:parent="CustomerScreen" msdata:child="OrderDetails" msdata:parentkey="ID" msdata:childkey="customerID" msprop:Generator_UserParentTable="CustomerScreen" msprop:Generator_UserChildTable="OrderDetails" msprop:Generator_RelationVarName="relationFK_OrderDetails_CustomerScreen" msprop:Generator_ChildPropName="GetOrderDetailsRows" msprop:Generator_ParentPropName="CustomerScreenRow" msprop:Generator_UserRelationName="FK_OrderDetails_CustomerScreen" />
      <msdata:Relationship name="FK_OrderDetails_StatusTypes" msdata:parent="StatusTypes" msdata:child="OrderDetails" msdata:parentkey="ID" msdata:childkey="statusID" msprop:Generator_UserParentTable="StatusTypes" msprop:Generator_UserChildTable="OrderDetails" msprop:Generator_RelationVarName="relationFK_OrderDetails_StatusTypes" msprop:Generator_UserRelationName="FK_OrderDetails_StatusTypes" msprop:Generator_ChildPropName="GetOrderDetailsRows" msprop:Generator_ParentPropName="StatusTypesRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>